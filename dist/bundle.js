(()=>{"use strict";var e={d:(t,s)=>{for(var n in s)e.o(s,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:s[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Decoder:()=>ye,Encoder:()=>pe,PacketType:()=>le,protocol:()=>ce});const s=Object.create(null);s.open="0",s.close="1",s.ping="2",s.pong="3",s.message="4",s.upgrade="5",s.noop="6";const n=Object.create(null);Object.keys(s).forEach((e=>{n[s[e]]=e}));const i={type:"error",data:"parser error"},o="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),r="function"==typeof ArrayBuffer,a=e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer instanceof ArrayBuffer,h=({type:e,data:t},n,i)=>o&&t instanceof Blob?n?i(t):c(t,i):r&&(t instanceof ArrayBuffer||a(t))?n?i(t):c(new Blob([t]),i):i(s[e]+(t||"")),c=(e,t)=>{const s=new FileReader;return s.onload=function(){const e=s.result.split(",")[1];t("b"+(e||""))},s.readAsDataURL(e)};function l(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}let p;const d="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let e=0;e<64;e++)d["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(e)]=e;const y="function"==typeof ArrayBuffer,u=(e,t)=>{if("string"!=typeof e)return{type:"message",data:f(e,t)};const s=e.charAt(0);return"b"===s?{type:"message",data:m(e.substring(1),t)}:n[s]?e.length>1?{type:n[s],data:e.substring(1)}:{type:n[s]}:i},m=(e,t)=>{if(y){const s=(e=>{let t,s,n,i,o,r=.75*e.length,a=e.length,h=0;"="===e[e.length-1]&&(r--,"="===e[e.length-2]&&r--);const c=new ArrayBuffer(r),l=new Uint8Array(c);for(t=0;t<a;t+=4)s=d[e.charCodeAt(t)],n=d[e.charCodeAt(t+1)],i=d[e.charCodeAt(t+2)],o=d[e.charCodeAt(t+3)],l[h++]=s<<2|n>>4,l[h++]=(15&n)<<4|i>>2,l[h++]=(3&i)<<6|63&o;return c})(e);return f(s,t)}return{base64:!0,data:e}},f=(e,t)=>"blob"===t?e instanceof Blob?e:new Blob([e]):e instanceof ArrayBuffer?e:e.buffer,g=String.fromCharCode(30);let _;function v(e){return e.reduce(((e,t)=>e+t.length),0)}function E(e,t){if(e[0].length===t)return e.shift();const s=new Uint8Array(t);let n=0;for(let i=0;i<t;i++)s[i]=e[0][n++],n===e[0].length&&(e.shift(),n=0);return e.length&&n<e[0].length&&(e[0]=e[0].slice(n)),s}function k(e){if(e)return function(e){for(var t in k.prototype)e[t]=k.prototype[t];return e}(e)}k.prototype.on=k.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},k.prototype.once=function(e,t){function s(){this.off(e,s),t.apply(this,arguments)}return s.fn=t,this.on(e,s),this},k.prototype.off=k.prototype.removeListener=k.prototype.removeAllListeners=k.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var s,n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<n.length;i++)if((s=n[i])===t||s.fn===t){n.splice(i,1);break}return 0===n.length&&delete this._callbacks["$"+e],this},k.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),s=this._callbacks["$"+e],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(s){n=0;for(var i=(s=s.slice(0)).length;n<i;++n)s[n].apply(this,t)}return this},k.prototype.emitReserved=k.prototype.emit,k.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},k.prototype.hasListeners=function(e){return!!this.listeners(e).length};const b="function"==typeof Promise&&"function"==typeof Promise.resolve?e=>Promise.resolve().then(e):(e,t)=>t(e,0),x="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")();function w(e,...t){return t.reduce(((t,s)=>(e.hasOwnProperty(s)&&(t[s]=e[s]),t)),{})}const I=x.setTimeout,A=x.clearTimeout;function R(e,t){t.useNativeTimers?(e.setTimeoutFn=I.bind(x),e.clearTimeoutFn=A.bind(x)):(e.setTimeoutFn=x.setTimeout.bind(x),e.clearTimeoutFn=x.clearTimeout.bind(x))}function T(){return Date.now().toString(36).substring(3)+Math.random().toString(36).substring(2,5)}class O extends Error{constructor(e,t,s){super(e),this.description=t,this.context=s,this.type="TransportError"}}class M extends k{constructor(e){super(),this.writable=!1,R(this,e),this.opts=e,this.query=e.query,this.socket=e.socket,this.supportsBinary=!e.forceBase64}onError(e,t,s){return super.emitReserved("error",new O(e,t,s)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(e){"open"===this.readyState&&this.write(e)}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const t=u(e,this.socket.binaryType);this.onPacket(t)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,t={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(t)}_hostname(){const e=this.opts.hostname;return-1===e.indexOf(":")?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(e){const t=function(e){let t="";for(let s in e)e.hasOwnProperty(s)&&(t.length&&(t+="&"),t+=encodeURIComponent(s)+"="+encodeURIComponent(e[s]));return t}(e);return t.length?"?"+t:""}}class S extends M{constructor(){super(...arguments),this._polling=!1}get name(){return"polling"}doOpen(){this._poll()}pause(e){this.readyState="pausing";const t=()=>{this.readyState="paused",e()};if(this._polling||!this.writable){let e=0;this._polling&&(e++,this.once("pollComplete",(function(){--e||t()}))),this.writable||(e++,this.once("drain",(function(){--e||t()})))}else t()}_poll(){this._polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){((e,t)=>{const s=e.split(g),n=[];for(let e=0;e<s.length;e++){const i=u(s[e],t);if(n.push(i),"error"===i.type)break}return n})(e,this.socket.binaryType).forEach((e=>{if("opening"===this.readyState&&"open"===e.type&&this.onOpen(),"close"===e.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(e)})),"closed"!==this.readyState&&(this._polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState&&this._poll())}doClose(){const e=()=>{this.write([{type:"close"}])};"open"===this.readyState?e():this.once("open",e)}write(e){this.writable=!1,((e,t)=>{const s=e.length,n=new Array(s);let i=0;e.forEach(((e,o)=>{h(e,!1,(e=>{n[o]=e,++i===s&&t(n.join(g))}))}))})(e,(e=>{this.doWrite(e,(()=>{this.writable=!0,this.emitReserved("drain")}))}))}uri(){const e=this.opts.secure?"https":"http",t=this.query||{};return!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=T()),this.supportsBinary||t.sid||(t.b64=1),this.createUri(e,t)}}let L=!1;try{L="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(e){}const C=L;function P(){}class N extends S{constructor(e){if(super(e),"undefined"!=typeof location){const t="https:"===location.protocol;let s=location.port;s||(s=t?"443":"80"),this.xd="undefined"!=typeof location&&e.hostname!==location.hostname||s!==e.port}}doWrite(e,t){const s=this.request({method:"POST",data:e});s.on("success",t),s.on("error",((e,t)=>{this.onError("xhr post error",e,t)}))}doPoll(){const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",((e,t)=>{this.onError("xhr poll error",e,t)})),this.pollXhr=e}}class D extends k{constructor(e,t,s){super(),this.createRequest=e,R(this,s),this._opts=s,this._method=s.method||"GET",this._uri=t,this._data=void 0!==s.data?s.data:null,this._create()}_create(){var e;const t=w(this._opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");t.xdomain=!!this._opts.xd;const s=this._xhr=this.createRequest(t);try{s.open(this._method,this._uri,!0);try{if(this._opts.extraHeaders){s.setDisableHeaderCheck&&s.setDisableHeaderCheck(!0);for(let e in this._opts.extraHeaders)this._opts.extraHeaders.hasOwnProperty(e)&&s.setRequestHeader(e,this._opts.extraHeaders[e])}}catch(e){}if("POST"===this._method)try{s.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{s.setRequestHeader("Accept","*/*")}catch(e){}null===(e=this._opts.cookieJar)||void 0===e||e.addCookies(s),"withCredentials"in s&&(s.withCredentials=this._opts.withCredentials),this._opts.requestTimeout&&(s.timeout=this._opts.requestTimeout),s.onreadystatechange=()=>{var e;3===s.readyState&&(null===(e=this._opts.cookieJar)||void 0===e||e.parseCookies(s.getResponseHeader("set-cookie"))),4===s.readyState&&(200===s.status||1223===s.status?this._onLoad():this.setTimeoutFn((()=>{this._onError("number"==typeof s.status?s.status:0)}),0))},s.send(this._data)}catch(e){return void this.setTimeoutFn((()=>{this._onError(e)}),0)}"undefined"!=typeof document&&(this._index=D.requestsCount++,D.requests[this._index]=this)}_onError(e){this.emitReserved("error",e,this._xhr),this._cleanup(!0)}_cleanup(e){if(void 0!==this._xhr&&null!==this._xhr){if(this._xhr.onreadystatechange=P,e)try{this._xhr.abort()}catch(e){}"undefined"!=typeof document&&delete D.requests[this._index],this._xhr=null}}_onLoad(){const e=this._xhr.responseText;null!==e&&(this.emitReserved("data",e),this.emitReserved("success"),this._cleanup())}abort(){this._cleanup()}}function Y(){for(let e in D.requests)D.requests.hasOwnProperty(e)&&D.requests[e].abort()}D.requestsCount=0,D.requests={},"undefined"!=typeof document&&("function"==typeof attachEvent?attachEvent("onunload",Y):"function"==typeof addEventListener&&addEventListener("onpagehide"in x?"pagehide":"unload",Y,!1));const B=function(){const e=H({xdomain:!1});return e&&null!==e.responseType}();function H(e){const t=e.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!t||C))return new XMLHttpRequest}catch(e){}if(!t)try{return new(x[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}}const X="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class U extends M{get name(){return"websocket"}doOpen(){const e=this.uri(),t=this.opts.protocols,s=X?{}:w(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(s.headers=this.opts.extraHeaders);try{this.ws=this.createSocket(e,t,s)}catch(e){return this.emitReserved("error",e)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const s=e[t],n=t===e.length-1;h(s,this.supportsBinary,(e=>{try{this.doWrite(s,e)}catch(e){}n&&b((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){void 0!==this.ws&&(this.ws.onerror=()=>{},this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",t=this.query||{};return this.opts.timestampRequests&&(t[this.opts.timestampParam]=T()),this.supportsBinary||(t.b64=1),this.createUri(e,t)}}const F=x.WebSocket||x.MozWebSocket,W={websocket:class extends U{createSocket(e,t,s){return X?new F(e,t,s):t?new F(e,t):new F(e)}doWrite(e,t){this.ws.send(t)}},webtransport:class extends M{get name(){return"webtransport"}doOpen(){try{this._transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name])}catch(e){return this.emitReserved("error",e)}this._transport.closed.then((()=>{this.onClose()})).catch((e=>{this.onError("webtransport error",e)})),this._transport.ready.then((()=>{this._transport.createBidirectionalStream().then((e=>{const t=function(e,t){_||(_=new TextDecoder);const s=[];let n=0,o=-1,r=!1;return new TransformStream({transform(a,h){for(s.push(a);;){if(0===n){if(v(s)<1)break;const e=E(s,1);r=!(128&~e[0]),o=127&e[0],n=o<126?3:126===o?1:2}else if(1===n){if(v(s)<2)break;const e=E(s,2);o=new DataView(e.buffer,e.byteOffset,e.length).getUint16(0),n=3}else if(2===n){if(v(s)<8)break;const e=E(s,8),t=new DataView(e.buffer,e.byteOffset,e.length),r=t.getUint32(0);if(r>Math.pow(2,21)-1){h.enqueue(i);break}o=r*Math.pow(2,32)+t.getUint32(4),n=3}else{if(v(s)<o)break;const e=E(s,o);h.enqueue(u(r?e:_.decode(e),t)),n=0}if(0===o||o>e){h.enqueue(i);break}}}})}(Number.MAX_SAFE_INTEGER,this.socket.binaryType),s=e.readable.pipeThrough(t).getReader(),n=new TransformStream({transform(e,t){!function(e,t){o&&e.data instanceof Blob?e.data.arrayBuffer().then(l).then(t):r&&(e.data instanceof ArrayBuffer||a(e.data))?t(l(e.data)):h(e,!1,(e=>{p||(p=new TextEncoder),t(p.encode(e))}))}(e,(s=>{const n=s.length;let i;if(n<126)i=new Uint8Array(1),new DataView(i.buffer).setUint8(0,n);else if(n<65536){i=new Uint8Array(3);const e=new DataView(i.buffer);e.setUint8(0,126),e.setUint16(1,n)}else{i=new Uint8Array(9);const e=new DataView(i.buffer);e.setUint8(0,127),e.setBigUint64(1,BigInt(n))}e.data&&"string"!=typeof e.data&&(i[0]|=128),t.enqueue(i),t.enqueue(s)}))}});n.readable.pipeTo(e.writable),this._writer=n.writable.getWriter();const c=()=>{s.read().then((({done:e,value:t})=>{e||(this.onPacket(t),c())})).catch((e=>{}))};c();const d={type:"open"};this.query.sid&&(d.data=`{"sid":"${this.query.sid}"}`),this._writer.write(d).then((()=>this.onOpen()))}))}))}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const s=e[t],n=t===e.length-1;this._writer.write(s).then((()=>{n&&b((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){var e;null===(e=this._transport)||void 0===e||e.close()}},polling:class extends N{constructor(e){super(e);const t=e&&e.forceBase64;this.supportsBinary=B&&!t}request(e={}){return Object.assign(e,{xd:this.xd},this.opts),new D(H,this.uri(),e)}}},q=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,z=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function j(e){if(e.length>8e3)throw"URI too long";const t=e,s=e.indexOf("["),n=e.indexOf("]");-1!=s&&-1!=n&&(e=e.substring(0,s)+e.substring(s,n).replace(/:/g,";")+e.substring(n,e.length));let i=q.exec(e||""),o={},r=14;for(;r--;)o[z[r]]=i[r]||"";return-1!=s&&-1!=n&&(o.source=t,o.host=o.host.substring(1,o.host.length-1).replace(/;/g,":"),o.authority=o.authority.replace("[","").replace("]","").replace(/;/g,":"),o.ipv6uri=!0),o.pathNames=function(e,t){const s=t.replace(/\/{2,9}/g,"/").split("/");return"/"!=t.slice(0,1)&&0!==t.length||s.splice(0,1),"/"==t.slice(-1)&&s.splice(s.length-1,1),s}(0,o.path),o.queryKey=function(e,t){const s={};return t.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(e,t,n){t&&(s[t]=n)})),s}(0,o.query),o}const K="function"==typeof addEventListener&&"function"==typeof removeEventListener,V=[];K&&addEventListener("offline",(()=>{V.forEach((e=>e()))}),!1);class G extends k{constructor(e,t){if(super(),this.binaryType="arraybuffer",this.writeBuffer=[],this._prevBufferLen=0,this._pingInterval=-1,this._pingTimeout=-1,this._maxPayload=-1,this._pingTimeoutTime=1/0,e&&"object"==typeof e&&(t=e,e=null),e){const s=j(e);t.hostname=s.host,t.secure="https"===s.protocol||"wss"===s.protocol,t.port=s.port,s.query&&(t.query=s.query)}else t.host&&(t.hostname=j(t.host).host);R(this,t),this.secure=null!=t.secure?t.secure:"undefined"!=typeof location&&"https:"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?"443":"80"),this.hostname=t.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=t.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=[],this._transportsByName={},t.transports.forEach((e=>{const t=e.prototype.name;this.transports.push(t),this._transportsByName[t]=e})),this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},t),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=function(e){let t={},s=e.split("&");for(let e=0,n=s.length;e<n;e++){let n=s[e].split("=");t[decodeURIComponent(n[0])]=decodeURIComponent(n[1])}return t}(this.opts.query)),K&&(this.opts.closeOnBeforeunload&&(this._beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this._beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(this._offlineEventListener=()=>{this._onClose("transport close",{description:"network connection lost"})},V.push(this._offlineEventListener))),this.opts.withCredentials&&(this._cookieJar=void 0),this._open()}createTransport(e){const t=Object.assign({},this.opts.query);t.EIO=4,t.transport=e,this.id&&(t.sid=this.id);const s=Object.assign({},this.opts,{query:t,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return new this._transportsByName[e](s)}_open(){if(0===this.transports.length)return void this.setTimeoutFn((()=>{this.emitReserved("error","No transports available")}),0);const e=this.opts.rememberUpgrade&&G.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket")?"websocket":this.transports[0];this.readyState="opening";const t=this.createTransport(e);t.open(),this.setTransport(t)}setTransport(e){this.transport&&this.transport.removeAllListeners(),this.transport=e,e.on("drain",this._onDrain.bind(this)).on("packet",this._onPacket.bind(this)).on("error",this._onError.bind(this)).on("close",(e=>this._onClose("transport close",e)))}onOpen(){this.readyState="open",G.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush()}_onPacket(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this._sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong"),this._resetPingTimeout();break;case"error":const t=new Error("server error");t.code=e.data,this._onError(t);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data)}}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this._pingInterval=e.pingInterval,this._pingTimeout=e.pingTimeout,this._maxPayload=e.maxPayload,this.onOpen(),"closed"!==this.readyState&&this._resetPingTimeout()}_resetPingTimeout(){this.clearTimeoutFn(this._pingTimeoutTimer);const e=this._pingInterval+this._pingTimeout;this._pingTimeoutTime=Date.now()+e,this._pingTimeoutTimer=this.setTimeoutFn((()=>{this._onClose("ping timeout")}),e),this.opts.autoUnref&&this._pingTimeoutTimer.unref()}_onDrain(){this.writeBuffer.splice(0,this._prevBufferLen),this._prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this._getWritablePackets();this.transport.send(e),this._prevBufferLen=e.length,this.emitReserved("flush")}}_getWritablePackets(){if(!(this._maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let e=1;for(let s=0;s<this.writeBuffer.length;s++){const n=this.writeBuffer[s].data;if(n&&(e+="string"==typeof(t=n)?function(e){let t=0,s=0;for(let n=0,i=e.length;n<i;n++)t=e.charCodeAt(n),t<128?s+=1:t<2048?s+=2:t<55296||t>=57344?s+=3:(n++,s+=4);return s}(t):Math.ceil(1.33*(t.byteLength||t.size))),s>0&&e>this._maxPayload)return this.writeBuffer.slice(0,s);e+=2}var t;return this.writeBuffer}_hasPingExpired(){if(!this._pingTimeoutTime)return!0;const e=Date.now()>this._pingTimeoutTime;return e&&(this._pingTimeoutTime=0,b((()=>{this._onClose("ping timeout")}),this.setTimeoutFn)),e}write(e,t,s){return this._sendPacket("message",e,t,s),this}send(e,t,s){return this._sendPacket("message",e,t,s),this}_sendPacket(e,t,s,n){if("function"==typeof t&&(n=t,t=void 0),"function"==typeof s&&(n=s,s=null),"closing"===this.readyState||"closed"===this.readyState)return;(s=s||{}).compress=!1!==s.compress;const i={type:e,data:t,options:s};this.emitReserved("packetCreate",i),this.writeBuffer.push(i),n&&this.once("flush",n),this.flush()}close(){const e=()=>{this._onClose("forced close"),this.transport.close()},t=()=>{this.off("upgrade",t),this.off("upgradeError",t),e()},s=()=>{this.once("upgrade",t),this.once("upgradeError",t)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(()=>{this.upgrading?s():e()})):this.upgrading?s():e()),this}_onError(e){if(G.priorWebsocketSuccess=!1,this.opts.tryAllTransports&&this.transports.length>1&&"opening"===this.readyState)return this.transports.shift(),this._open();this.emitReserved("error",e),this._onClose("transport error",e)}_onClose(e,t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){if(this.clearTimeoutFn(this._pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),K&&(this._beforeunloadEventListener&&removeEventListener("beforeunload",this._beforeunloadEventListener,!1),this._offlineEventListener)){const e=V.indexOf(this._offlineEventListener);-1!==e&&V.splice(e,1)}this.readyState="closed",this.id=null,this.emitReserved("close",e,t),this.writeBuffer=[],this._prevBufferLen=0}}}G.protocol=4;class Z extends G{constructor(){super(...arguments),this._upgrades=[]}onOpen(){if(super.onOpen(),"open"===this.readyState&&this.opts.upgrade)for(let e=0;e<this._upgrades.length;e++)this._probe(this._upgrades[e])}_probe(e){let t=this.createTransport(e),s=!1;G.priorWebsocketSuccess=!1;const n=()=>{s||(t.send([{type:"ping",data:"probe"}]),t.once("packet",(e=>{if(!s)if("pong"===e.type&&"probe"===e.data){if(this.upgrading=!0,this.emitReserved("upgrading",t),!t)return;G.priorWebsocketSuccess="websocket"===t.name,this.transport.pause((()=>{s||"closed"!==this.readyState&&(c(),this.setTransport(t),t.send([{type:"upgrade"}]),this.emitReserved("upgrade",t),t=null,this.upgrading=!1,this.flush())}))}else{const e=new Error("probe error");e.transport=t.name,this.emitReserved("upgradeError",e)}})))};function i(){s||(s=!0,c(),t.close(),t=null)}const o=e=>{const s=new Error("probe error: "+e);s.transport=t.name,i(),this.emitReserved("upgradeError",s)};function r(){o("transport closed")}function a(){o("socket closed")}function h(e){t&&e.name!==t.name&&i()}const c=()=>{t.removeListener("open",n),t.removeListener("error",o),t.removeListener("close",r),this.off("close",a),this.off("upgrading",h)};t.once("open",n),t.once("error",o),t.once("close",r),this.once("close",a),this.once("upgrading",h),-1!==this._upgrades.indexOf("webtransport")&&"webtransport"!==e?this.setTimeoutFn((()=>{s||t.open()}),200):t.open()}onHandshake(e){this._upgrades=this._filterUpgrades(e.upgrades),super.onHandshake(e)}_filterUpgrades(e){const t=[];for(let s=0;s<e.length;s++)~this.transports.indexOf(e[s])&&t.push(e[s]);return t}}class J extends Z{constructor(e,t={}){const s="object"==typeof e?e:t;(!s.transports||s.transports&&"string"==typeof s.transports[0])&&(s.transports=(s.transports||["polling","websocket","webtransport"]).map((e=>W[e])).filter((e=>!!e))),super(e,s)}}const $="function"==typeof ArrayBuffer,Q=Object.prototype.toString,ee="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Q.call(Blob),te="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===Q.call(File);function se(e){return $&&(e instanceof ArrayBuffer||(e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer)(e))||ee&&e instanceof Blob||te&&e instanceof File}function ne(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e)){for(let t=0,s=e.length;t<s;t++)if(ne(e[t]))return!0;return!1}if(se(e))return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return ne(e.toJSON(),!0);for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&ne(e[t]))return!0;return!1}function ie(e){const t=[],s=e.data,n=e;return n.data=oe(s,t),n.attachments=t.length,{packet:n,buffers:t}}function oe(e,t){if(!e)return e;if(se(e)){const s={_placeholder:!0,num:t.length};return t.push(e),s}if(Array.isArray(e)){const s=new Array(e.length);for(let n=0;n<e.length;n++)s[n]=oe(e[n],t);return s}if("object"==typeof e&&!(e instanceof Date)){const s={};for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(s[n]=oe(e[n],t));return s}return e}function re(e,t){return e.data=ae(e.data,t),delete e.attachments,e}function ae(e,t){if(!e)return e;if(e&&!0===e._placeholder){if("number"==typeof e.num&&e.num>=0&&e.num<t.length)return t[e.num];throw new Error("illegal attachments")}if(Array.isArray(e))for(let s=0;s<e.length;s++)e[s]=ae(e[s],t);else if("object"==typeof e)for(const s in e)Object.prototype.hasOwnProperty.call(e,s)&&(e[s]=ae(e[s],t));return e}const he=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"],ce=5;var le;!function(e){e[e.CONNECT=0]="CONNECT",e[e.DISCONNECT=1]="DISCONNECT",e[e.EVENT=2]="EVENT",e[e.ACK=3]="ACK",e[e.CONNECT_ERROR=4]="CONNECT_ERROR",e[e.BINARY_EVENT=5]="BINARY_EVENT",e[e.BINARY_ACK=6]="BINARY_ACK"}(le||(le={}));class pe{constructor(e){this.replacer=e}encode(e){return e.type!==le.EVENT&&e.type!==le.ACK||!ne(e)?[this.encodeAsString(e)]:this.encodeAsBinary({type:e.type===le.EVENT?le.BINARY_EVENT:le.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id})}encodeAsString(e){let t=""+e.type;return e.type!==le.BINARY_EVENT&&e.type!==le.BINARY_ACK||(t+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(t+=e.nsp+","),null!=e.id&&(t+=e.id),null!=e.data&&(t+=JSON.stringify(e.data,this.replacer)),t}encodeAsBinary(e){const t=ie(e),s=this.encodeAsString(t.packet),n=t.buffers;return n.unshift(s),n}}function de(e){return"[object Object]"===Object.prototype.toString.call(e)}class ye extends k{constructor(e){super(),this.reviver=e}add(e){let t;if("string"==typeof e){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");t=this.decodeString(e);const s=t.type===le.BINARY_EVENT;s||t.type===le.BINARY_ACK?(t.type=s?le.EVENT:le.ACK,this.reconstructor=new ue(t),0===t.attachments&&super.emitReserved("decoded",t)):super.emitReserved("decoded",t)}else{if(!se(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");t=this.reconstructor.takeBinaryData(e),t&&(this.reconstructor=null,super.emitReserved("decoded",t))}}decodeString(e){let t=0;const s={type:Number(e.charAt(0))};if(void 0===le[s.type])throw new Error("unknown packet type "+s.type);if(s.type===le.BINARY_EVENT||s.type===le.BINARY_ACK){const n=t+1;for(;"-"!==e.charAt(++t)&&t!=e.length;);const i=e.substring(n,t);if(i!=Number(i)||"-"!==e.charAt(t))throw new Error("Illegal attachments");s.attachments=Number(i)}if("/"===e.charAt(t+1)){const n=t+1;for(;++t&&","!==e.charAt(t)&&t!==e.length;);s.nsp=e.substring(n,t)}else s.nsp="/";const n=e.charAt(t+1);if(""!==n&&Number(n)==n){const n=t+1;for(;++t;){const s=e.charAt(t);if(null==s||Number(s)!=s){--t;break}if(t===e.length)break}s.id=Number(e.substring(n,t+1))}if(e.charAt(++t)){const n=this.tryParse(e.substr(t));if(!ye.isPayloadValid(s.type,n))throw new Error("invalid payload");s.data=n}return s}tryParse(e){try{return JSON.parse(e,this.reviver)}catch(e){return!1}}static isPayloadValid(e,t){switch(e){case le.CONNECT:return de(t);case le.DISCONNECT:return void 0===t;case le.CONNECT_ERROR:return"string"==typeof t||de(t);case le.EVENT:case le.BINARY_EVENT:return Array.isArray(t)&&("number"==typeof t[0]||"string"==typeof t[0]&&-1===he.indexOf(t[0]));case le.ACK:case le.BINARY_ACK:return Array.isArray(t)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}class ue{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const e=re(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}function me(e,t,s){return e.on(t,s),function(){e.off(t,s)}}const fe=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class ge extends k{constructor(e,t,s){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=t,s&&s.auth&&(this.auth=s.auth),this._opts=Object.assign({},s),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[me(e,"open",this.onopen.bind(this)),me(e,"packet",this.onpacket.bind(this)),me(e,"error",this.onerror.bind(this)),me(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...t){var s,n,i;if(fe.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(t.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(t),this;const o={type:le.EVENT,data:t,options:{}};if(o.options.compress=!1!==this.flags.compress,"function"==typeof t[t.length-1]){const e=this.ids++,s=t.pop();this._registerAckCallback(e,s),o.id=e}const r=null===(n=null===(s=this.io.engine)||void 0===s?void 0:s.transport)||void 0===n?void 0:n.writable,a=this.connected&&!(null===(i=this.io.engine)||void 0===i?void 0:i._hasPingExpired());return this.flags.volatile&&!r||(a?(this.notifyOutgoingListeners(o),this.packet(o)):this.sendBuffer.push(o)),this.flags={},this}_registerAckCallback(e,t){var s;const n=null!==(s=this.flags.timeout)&&void 0!==s?s:this._opts.ackTimeout;if(void 0===n)return void(this.acks[e]=t);const i=this.io.setTimeoutFn((()=>{delete this.acks[e];for(let t=0;t<this.sendBuffer.length;t++)this.sendBuffer[t].id===e&&this.sendBuffer.splice(t,1);t.call(this,new Error("operation has timed out"))}),n),o=(...e)=>{this.io.clearTimeoutFn(i),t.apply(this,e)};o.withError=!0,this.acks[e]=o}emitWithAck(e,...t){return new Promise(((s,n)=>{const i=(e,t)=>e?n(e):s(t);i.withError=!0,t.push(i),this.emit(e,...t)}))}_addToQueue(e){let t;"function"==typeof e[e.length-1]&&(t=e.pop());const s={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push(((e,...n)=>{if(s===this._queue[0])return null!==e?s.tryCount>this._opts.retries&&(this._queue.shift(),t&&t(e)):(this._queue.shift(),t&&t(null,...n)),s.pending=!1,this._drainQueue()})),this._queue.push(s),this._drainQueue()}_drainQueue(e=!1){if(!this.connected||0===this._queue.length)return;const t=this._queue[0];t.pending&&!e||(t.pending=!0,t.tryCount++,this.flags=t.flags,this.emit.apply(this,t.args))}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){"function"==typeof this.auth?this.auth((e=>{this._sendConnectPacket(e)})):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:le.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,t){this.connected=!1,delete this.id,this.emitReserved("disconnect",e,t),this._clearAcks()}_clearAcks(){Object.keys(this.acks).forEach((e=>{if(!this.sendBuffer.some((t=>String(t.id)===e))){const t=this.acks[e];delete this.acks[e],t.withError&&t.call(this,new Error("socket has been disconnected"))}}))}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case le.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case le.EVENT:case le.BINARY_EVENT:this.onevent(e);break;case le.ACK:case le.BINARY_ACK:this.onack(e);break;case le.DISCONNECT:this.ondisconnect();break;case le.CONNECT_ERROR:this.destroy();const t=new Error(e.data.message);t.data=e.data.data,this.emitReserved("connect_error",t)}}onevent(e){const t=e.data||[];null!=e.id&&t.push(this.ack(e.id)),this.connected?this.emitEvent(t):this.receiveBuffer.push(Object.freeze(t))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const t=this._anyListeners.slice();for(const s of t)s.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&"string"==typeof e[e.length-1]&&(this._lastOffset=e[e.length-1])}ack(e){const t=this;let s=!1;return function(...n){s||(s=!0,t.packet({type:le.ACK,id:e,data:n}))}}onack(e){const t=this.acks[e.id];"function"==typeof t&&(delete this.acks[e.id],t.withError&&e.data.unshift(null),t.apply(this,e.data))}onconnect(e,t){this.id=e,this.recovered=t&&this._pid===t,this._pid=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach((e=>this.emitEvent(e))),this.receiveBuffer=[],this.sendBuffer.forEach((e=>{this.notifyOutgoingListeners(e),this.packet(e)})),this.sendBuffer=[]}ondisconnect(){this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach((e=>e())),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&this.packet({type:le.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const t=this._anyListeners;for(let s=0;s<t.length;s++)if(e===t[s])return t.splice(s,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const t=this._anyOutgoingListeners;for(let s=0;s<t.length;s++)if(e===t[s])return t.splice(s,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const t=this._anyOutgoingListeners.slice();for(const s of t)s.apply(this,e.data)}}}function _e(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}_e.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),s=Math.floor(t*this.jitter*e);e=1&Math.floor(10*t)?e+s:e-s}return 0|Math.min(e,this.max)},_e.prototype.reset=function(){this.attempts=0},_e.prototype.setMin=function(e){this.ms=e},_e.prototype.setMax=function(e){this.max=e},_e.prototype.setJitter=function(e){this.jitter=e};class ve extends k{constructor(e,s){var n;super(),this.nsps={},this.subs=[],e&&"object"==typeof e&&(s=e,e=void 0),(s=s||{}).path=s.path||"/socket.io",this.opts=s,R(this,s),this.reconnection(!1!==s.reconnection),this.reconnectionAttempts(s.reconnectionAttempts||1/0),this.reconnectionDelay(s.reconnectionDelay||1e3),this.reconnectionDelayMax(s.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(n=s.randomizationFactor)&&void 0!==n?n:.5),this.backoff=new _e({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==s.timeout?2e4:s.timeout),this._readyState="closed",this.uri=e;const i=s.parser||t;this.encoder=new i.Encoder,this.decoder=new i.Decoder,this._autoConnect=!1!==s.autoConnect,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,e||(this.skipReconnect=!0),this):this._reconnection}reconnectionAttempts(e){return void 0===e?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var t;return void 0===e?this._reconnectionDelay:(this._reconnectionDelay=e,null===(t=this.backoff)||void 0===t||t.setMin(e),this)}randomizationFactor(e){var t;return void 0===e?this._randomizationFactor:(this._randomizationFactor=e,null===(t=this.backoff)||void 0===t||t.setJitter(e),this)}reconnectionDelayMax(e){var t;return void 0===e?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,null===(t=this.backoff)||void 0===t||t.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(e){if(~this._readyState.indexOf("open"))return this;this.engine=new J(this.uri,this.opts);const t=this.engine,s=this;this._readyState="opening",this.skipReconnect=!1;const n=me(t,"open",(function(){s.onopen(),e&&e()})),i=t=>{this.cleanup(),this._readyState="closed",this.emitReserved("error",t),e?e(t):this.maybeReconnectOnOpen()},o=me(t,"error",i);if(!1!==this._timeout){const e=this._timeout,s=this.setTimeoutFn((()=>{n(),i(new Error("timeout")),t.close()}),e);this.opts.autoUnref&&s.unref(),this.subs.push((()=>{this.clearTimeoutFn(s)}))}return this.subs.push(n),this.subs.push(o),this}connect(e){return this.open(e)}onopen(){this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push(me(e,"ping",this.onping.bind(this)),me(e,"data",this.ondata.bind(this)),me(e,"error",this.onerror.bind(this)),me(e,"close",this.onclose.bind(this)),me(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(e){this.onclose("parse error",e)}}ondecoded(e){b((()=>{this.emitReserved("packet",e)}),this.setTimeoutFn)}onerror(e){this.emitReserved("error",e)}socket(e,t){let s=this.nsps[e];return s?this._autoConnect&&!s.active&&s.connect():(s=new ge(this,e,t),this.nsps[e]=s),s}_destroy(e){const t=Object.keys(this.nsps);for(const e of t)if(this.nsps[e].active)return;this._close()}_packet(e){const t=this.encoder.encode(e);for(let s=0;s<t.length;s++)this.engine.write(t[s],e.options)}cleanup(){this.subs.forEach((e=>e())),this.subs.length=0,this.decoder.destroy()}_close(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close")}disconnect(){return this._close()}onclose(e,t){var s;this.cleanup(),null===(s=this.engine)||void 0===s||s.close(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,t),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const t=this.backoff.duration();this._reconnecting=!0;const s=this.setTimeoutFn((()=>{e.skipReconnect||(this.emitReserved("reconnect_attempt",e.backoff.attempts),e.skipReconnect||e.open((t=>{t?(e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",t)):e.onreconnect()})))}),t);this.opts.autoUnref&&s.unref(),this.subs.push((()=>{this.clearTimeoutFn(s)}))}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}const Ee={};function ke(e,t){"object"==typeof e&&(t=e,e=void 0);const s=function(e,t="",s){let n=e;s=s||"undefined"!=typeof location&&location,null==e&&(e=s.protocol+"//"+s.host),"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?s.protocol+e:s.host+e),/^(https?|wss?):\/\//.test(e)||(e=void 0!==s?s.protocol+"//"+e:"https://"+e),n=j(e)),n.port||(/^(http|ws)$/.test(n.protocol)?n.port="80":/^(http|ws)s$/.test(n.protocol)&&(n.port="443")),n.path=n.path||"/";const i=-1!==n.host.indexOf(":")?"["+n.host+"]":n.host;return n.id=n.protocol+"://"+i+":"+n.port+t,n.href=n.protocol+"://"+i+(s&&s.port===n.port?"":":"+n.port),n}(e,(t=t||{}).path||"/socket.io"),n=s.source,i=s.id,o=s.path,r=Ee[i]&&o in Ee[i].nsps;let a;return t.forceNew||t["force new connection"]||!1===t.multiplex||r?a=new ve(n,t):(Ee[i]||(Ee[i]=new ve(n,t)),a=Ee[i]),s.query&&!t.query&&(t.query=s.queryKey),a.socket(s.path,t)}Object.assign(ke,{Manager:ve,Socket:ge,io:ke,connect:ke});let be=null;window.onload=()=>{const e=document.getElementById("singlePlayerButton"),t=document.getElementById("multiPlayerButton");e?.addEventListener("click",(()=>{be&&be.cleanup(),be=new xe(!0)})),t?.addEventListener("click",(()=>{be&&be.cleanup(),be=new xe(!1)}))};class xe{constructor(e=!1){this.players=new Map,this.dots=[],this.DOT_SIZE=5,this.DOT_COUNT=20,this.PLAYER_ACCELERATION=.2,this.MAX_SPEED=4,this.FRICTION=.92,this.cameraX=0,this.cameraY=0,this.WORLD_WIDTH=1e4,this.WORLD_HEIGHT=2e3,this.keysPressed=new Set,this.enemies=new Map,this.PLAYER_MAX_HEALTH=100,this.ENEMY_MAX_HEALTH={common:20,uncommon:40,rare:60,epic:80,legendary:100,mythic:150},this.PLAYER_DAMAGE=10,this.ENEMY_DAMAGE=5,this.DAMAGE_COOLDOWN=1e3,this.lastDamageTime=0,this.ENEMY_COLORS={common:"#808080",uncommon:"#008000",rare:"#0000FF",epic:"#800080",legendary:"#FFA500",mythic:"#FF0000"},this.obstacles=[],this.ENEMY_CORAL_MAX_HEALTH=50,this.items=[],this.itemSprites={},this.isInventoryOpen=!1,this.isSinglePlayer=!1,this.worker=null,this.gameLoopId=null,this.socketHandlers=new Map,this.BASE_XP_REQUIREMENT=100,this.XP_MULTIPLIER=1.5,this.MAX_LEVEL=50,this.HEALTH_PER_LEVEL=10,this.DAMAGE_PER_LEVEL=2,this.floatingTexts=[],this.ENEMY_SIZE_MULTIPLIERS={common:1,uncommon:1.2,rare:1.4,epic:1.6,legendary:1.8,mythic:2},this.isPlayerDead=!1,this.MINIMAP_WIDTH=200,this.MINIMAP_HEIGHT=40,this.MINIMAP_PADDING=10,this.decorations=[],this.sands=[],this.useMouseControls=!1,this.mouseX=0,this.mouseY=0,console.log("Game constructor called"),this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.resizeCanvas(),window.addEventListener("resize",(()=>this.resizeCanvas())),this.isSinglePlayer=e,this.playerSprite=new Image,this.playerSprite.src="./assets/player.png",this.playerSprite.onload=()=>{console.log("Player sprite loaded successfully"),this.gameLoop()},this.playerSprite.onerror=e=>{console.error("Error loading player sprite:",e)},this.octopusSprite=new Image,this.octopusSprite.src="./assets/octopus.png",this.fishSprite=new Image,this.fishSprite.src="./assets/fish.png",this.coralSprite=new Image,this.coralSprite.src="./assets/coral.png",this.palmSprite=new Image,this.palmSprite.src="./assets/palm.png",this.palmSprite.onerror=e=>{console.error("Error loading palm sprite:",e)},this.setupEventListeners(),this.setupItemSprites(),this.isSinglePlayer?this.initSinglePlayerMode():this.initMultiPlayerMode();const t=document.getElementById("respawnButton");t?.addEventListener("click",(()=>{this.isPlayerDead&&this.socket.emit("requestRespawn")})),this.canvas.addEventListener("mousemove",(e=>{if(this.useMouseControls){const t=this.canvas.getBoundingClientRect();this.mouseX=e.clientX-t.left+this.cameraX,this.mouseY=e.clientY-t.top+this.cameraY}}))}initSinglePlayerMode(){console.log("Initializing single player mode");try{const e=new Blob(["\n                // Worker code starts here\n                const WORLD_WIDTH = 10000;  // Changed from 2000 to 10000\n                const WORLD_HEIGHT = 2000;\n                const ENEMY_COUNT = 100;\n                const OBSTACLE_COUNT = 20;\n                const ENEMY_CORAL_PROBABILITY = 0.3;\n                const ENEMY_CORAL_HEALTH = 50;\n                const ENEMY_CORAL_DAMAGE = 5;\n                const PLAYER_MAX_HEALTH = 100;\n                const PLAYER_DAMAGE = 10;\n                const ITEM_COUNT = 10;\n                const MAX_INVENTORY_SIZE = 5;\n                const PLAYER_SIZE = 40;\n                const COLLISION_RADIUS = PLAYER_SIZE / 2;\n                const ENEMY_SIZE = 40;\n                const RESPAWN_INVULNERABILITY_TIME = 3000;\n                const KNOCKBACK_FORCE = 100;\n                const KNOCKBACK_RECOVERY_SPEED = 0.9;\n                const DECORATION_COUNT = 100;  // Number of palms to spawn\n\n                const ENEMY_TIERS = {\n                    common: { health: 20, speed: 0.5, damage: 5, probability: 0.4 },\n                    uncommon: { health: 40, speed: 0.75, damage: 10, probability: 0.3 },\n                    rare: { health: 60, speed: 1, damage: 15, probability: 0.15 },\n                    epic: { health: 80, speed: 1.25, damage: 20, probability: 0.1 },\n                    legendary: { health: 100, speed: 1.5, damage: 25, probability: 0.04 },\n                    mythic: { health: 150, speed: 2, damage: 30, probability: 0.01 }\n                };\n                var ZONE_BOUNDARIES = {\n                    common: { start: 0, end: 2000 },\n                    uncommon: { start: 2000, end: 4000 },\n                    rare: { start: 4000, end: 6000 },\n                    epic: { start: 6000, end: 8000 },\n                    legendary: { start: 8000, end: 9000 },\n                    mythic: { start: 9000, end: WORLD_WIDTH }\n                };\n                var ENEMY_SIZE_MULTIPLIERS = {\n                    common: 1.0,\n                    uncommon: 1.2,\n                    rare: 1.4,\n                    epic: 1.6,\n                    legendary: 1.8,\n                    mythic: 2.0\n                };\n\n                const players = {};\n                const enemies = [];\n                const obstacles = [];\n                const items = [];\n                const dots = [];\n                const decorations = [];\n                const sands = [];\n\n                // Helper function to get random position in a specific zone\n                function getRandomPositionInZone(zoneIndex) {\n                    const zoneWidth = WORLD_WIDTH / 6;  // 6 zones\n                    const startX = zoneIndex * zoneWidth;\n                    \n                    // For legendary and mythic zones, ensure they're in the rightmost areas\n                    if (zoneIndex >= 4) {  // Legendary and Mythic zones\n                        const adjustedStartX = WORLD_WIDTH - (6 - zoneIndex) * (zoneWidth / 2);  // Start from right side\n                        return {\n                            x: adjustedStartX + Math.random() * (WORLD_WIDTH - adjustedStartX),\n                            y: Math.random() * WORLD_HEIGHT\n                        };\n                    }\n                    \n                    return {\n                        x: startX + Math.random() * zoneWidth,\n                        y: Math.random() * WORLD_HEIGHT\n                    };\n                }\n                function moveEnemies() {\n                    enemies.forEach(function (enemy) {\n                        // Store original x position\n                        var originalX = enemy.x;\n                        // Apply existing movement logic\n                        if (enemy.knockbackX) {\n                            enemy.knockbackX *= KNOCKBACK_RECOVERY_SPEED;\n                            enemy.x += enemy.knockbackX;\n                            if (Math.abs(enemy.knockbackX) < 0.1)\n                                enemy.knockbackX = 0;\n                        }\n                        if (enemy.knockbackY) {\n                            enemy.knockbackY *= KNOCKBACK_RECOVERY_SPEED;\n                            enemy.y += enemy.knockbackY;\n                            if (Math.abs(enemy.knockbackY) < 0.1)\n                                enemy.knockbackY = 0;\n                        }\n                        if (enemy.type === 'octopus') {\n                            enemy.x += (Math.random() * 4 - 2) * enemy.speed;\n                            enemy.y += (Math.random() * 4 - 2) * enemy.speed;\n                        }\n                        else {\n                            enemy.x += Math.cos(enemy.angle) * 2 * enemy.speed;\n                            enemy.y += Math.sin(enemy.angle) * 2 * enemy.speed;\n                        }\n                        // Keep enemy within its zone boundaries\n                        var zone = ZONE_BOUNDARIES[enemy.tier];\n                        if (enemy.x < zone.start || enemy.x >= zone.end) {\n                            // If enemy would leave its zone, reverse direction or reset position\n                            if (enemy.type === 'fish') {\n                                enemy.angle = Math.PI - enemy.angle; // Reverse direction\n                            }\n                            enemy.x = Math.max(zone.start, Math.min(zone.end - 1, enemy.x));\n                        }\n                        // Wrap around only for Y axis\n                        enemy.y = (enemy.y + WORLD_HEIGHT) % WORLD_HEIGHT;\n                        if (enemy.type === 'fish' && Math.random() < 0.02) {\n                            enemy.angle = Math.random() * Math.PI * 2;\n                        }\n                    });\n                }\n\n                // Update creation functions to use zones\n                function createDecoration() {\n                    const zoneIndex = Math.floor(Math.random() * 6);  // 6 zones\n                    const pos = getRandomPositionInZone(zoneIndex);\n                    return {\n                        x: pos.x,\n                        y: pos.y,\n                        scale: 0.5 + Math.random() * 1.5\n                    };\n                }\n\n                function createEnemy() {\n                    const tierRoll = Math.random();\n                    let tier = 'common';\n                    let cumulativeProbability = 0;\n                    for (const [t, data] of Object.entries(ENEMY_TIERS)) {\n                        cumulativeProbability += data.probability;\n                        if (tierRoll < cumulativeProbability) {\n                            tier = t;\n                            break;\n                        }\n                    }\n                    const tierData = ENEMY_TIERS[tier];\n                    \n                    // Map tiers to specific zones, ensuring legendary and mythic are in the rightmost areas\n                    const tierZones = {\n                        common: 0,\n                        uncommon: 1,\n                        rare: 2,\n                        epic: 3,\n                        legendary: 4,\n                        mythic: 5\n                    };\n                    \n                    const pos = getRandomPositionInZone(tierZones[tier]);\n                    \n                    return {\n                        id: Math.random().toString(36).substr(2, 9),\n                        type: Math.random() < 0.5 ? 'octopus' : 'fish',\n                        tier,\n                        x: pos.x,\n                        y: pos.y,\n                        angle: Math.random() * Math.PI * 2,\n                        health: tierData.health,\n                        speed: tierData.speed,\n                        damage: tierData.damage,\n                        knockbackX: 0,\n                        knockbackY: 0\n                    };\n                }\n\n                function createObstacle() {\n                    const zoneIndex = Math.floor(Math.random() * 6);\n                    const pos = getRandomPositionInZone(zoneIndex);\n                    const isEnemy = Math.random() < ENEMY_CORAL_PROBABILITY;\n                    return {\n                        id: Math.random().toString(36).substr(2, 9),\n                        x: pos.x,\n                        y: pos.y,\n                        width: 50 + Math.random() * 50,\n                        height: 50 + Math.random() * 50,\n                        type: 'coral',\n                        isEnemy,\n                        health: isEnemy ? ENEMY_CORAL_HEALTH : undefined\n                    };\n                }\n\n                function createItem() {\n                    const zoneIndex = Math.floor(Math.random() * 6);\n                    const pos = getRandomPositionInZone(zoneIndex);\n                    return {\n                        id: Math.random().toString(36).substr(2, 9),\n                        type: ['health_potion', 'speed_boost', 'shield'][Math.floor(Math.random() * 3)],\n                        x: pos.x,\n                        y: pos.y\n                    };\n                }\n\n                function initializeGame(messageData) {\n                    console.log('Initializing game state in worker');\n                    \n                    // Start player in the first zone (common)\n                    players[socket.id] = {\n                        id: socket.id,\n                        x: WORLD_WIDTH / 12,  // Center of first zone\n                        y: WORLD_HEIGHT / 2,\n                        angle: 0,\n                        score: 0,\n                        velocityX: 0,\n                        velocityY: 0,\n                        health: PLAYER_MAX_HEALTH,\n                        inventory: [],\n                        isInvulnerable: true,\n                        level: 1,\n                        xp: 0,\n                        xpToNextLevel: 100,\n                        maxHealth: PLAYER_MAX_HEALTH,\n                        damage: PLAYER_DAMAGE\n                    };\n\n                    // Ensure specific number of legendary and mythic enemies\n                    const legendaryCount = Math.floor(ENEMY_COUNT * 0.04);  // 4% of total\n                    const mythicCount = Math.floor(ENEMY_COUNT * 0.01);     // 1% of total\n                    \n                    // Spawn legendary enemies\n                    for (let i = 0; i < legendaryCount; i++) {\n                        const enemy = createEnemy();\n                        enemy.tier = 'legendary';\n                        const pos = getRandomPositionInZone(4);  // Zone 4 for legendary\n                        enemy.x = pos.x;\n                        enemy.y = pos.y;\n                        enemies.push(enemy);\n                    }\n                    \n                    // Spawn mythic enemies\n                    for (let i = 0; i < mythicCount; i++) {\n                        const enemy = createEnemy();\n                        enemy.tier = 'mythic';\n                        const pos = getRandomPositionInZone(5);  // Zone 5 for mythic\n                        enemy.x = pos.x;\n                        enemy.y = pos.y;\n                        enemies.push(enemy);\n                    }\n                    \n                    // Spawn remaining enemies\n                    const remainingCount = ENEMY_COUNT - legendaryCount - mythicCount;\n                    for (let i = 0; i < remainingCount; i++) {\n                        enemies.push(createEnemy());\n                    }\n\n                    for (let i = 0; i < OBSTACLE_COUNT; i++) {\n                        obstacles.push(createObstacle());\n                    }\n\n                    for (let i = 0; i < ITEM_COUNT; i++) {\n                        items.push(createItem());\n                    }\n\n                    for (let i = 0; i < DECORATION_COUNT; i++) {\n                        decorations.push(createDecoration());\n                    }\n\n                    // Emit initial state\n                    socket.emit('currentPlayers', players);\n                    socket.emit('enemiesUpdate', enemies);\n                    socket.emit('obstaclesUpdate', obstacles);\n                    socket.emit('itemsUpdate', items);\n                    socket.emit('decorationsUpdate', decorations);\n                    socket.emit('playerMoved', players[socket.id]);\n                }\n\n                // Mock Socket class implementation\n                class MockSocket {\n                    constructor() {\n                        this.eventHandlers = new Map();\n                        this.id = 'player1';\n                    }\n                    on(event, handler) {\n                        if (!this.eventHandlers.has(event)) {\n                            this.eventHandlers.set(event, []);\n                        }\n                        this.eventHandlers.get(event)?.push(handler);\n                    }\n                    emit(event, data) {\n                        self.postMessage({\n                            type: 'socketEvent',\n                            event,\n                            data\n                        });\n                    }\n                    getId() {\n                        return this.id;\n                    }\n                }\n\n                const socket = new MockSocket();\n\n                // Message handler\n                self.onmessage = function(event) {\n                    const { type, event: socketEvent, data } = event.data;\n                    \n                    switch (type) {\n                        case 'init':\n                            initializeGame(event.data);\n                            break;\n                        case 'socketEvent':\n                            switch (socketEvent) {\n                case 'playerMovement':\n                    var player = players[socket.id];\n                    if (player) {\n                        var newX = data.x;\n                        var newY = data.y;\n                        // Apply knockback to player position if it exists\n                        if (player.knockbackX) {\n                            player.knockbackX *= KNOCKBACK_RECOVERY_SPEED;\n                            newX += player.knockbackX;\n                            if (Math.abs(player.knockbackX) < 0.1)\n                                player.knockbackX = 0;\n                        }\n                        if (player.knockbackY) {\n                            player.knockbackY *= KNOCKBACK_RECOVERY_SPEED;\n                            newY += player.knockbackY;\n                            if (Math.abs(player.knockbackY) < 0.1)\n                                player.knockbackY = 0;\n                        }\n                        var collision = false;\n                        var _loop_1 = function (enemy) {\n                            var enemySize = ENEMY_SIZE * ENEMY_SIZE_MULTIPLIERS[enemy.tier];\n                            if (newX < enemy.x + enemySize &&\n                                newX + PLAYER_SIZE > enemy.x &&\n                                newY < enemy.y + enemySize &&\n                                newY + PLAYER_SIZE > enemy.y) {\n                                collision = true;\n                                if (!player.isInvulnerable) {\n                                    // Enemy damages player\n                                    player.health -= enemy.damage;\n                                    socket.emit('playerDamaged', { playerId: player.id, health: player.health });\n                                    // Player damages enemy\n                                    enemy.health -= player.damage; // Use player.damage instead of PLAYER_DAMAGE\n                                    socket.emit('enemyDamaged', { enemyId: enemy.id, health: enemy.health });\n                                    // Calculate knockback direction\n                                    var dx = enemy.x - newX;\n                                    var dy = enemy.y - newY;\n                                    var distance = Math.sqrt(dx * dx + dy * dy);\n                                    var normalizedDx = dx / distance;\n                                    var normalizedDy = dy / distance;\n                                    // Apply knockback to player's position immediately\n                                    newX -= normalizedDx * KNOCKBACK_FORCE;\n                                    newY -= normalizedDy * KNOCKBACK_FORCE;\n                                    // Store knockback for gradual recovery\n                                    player.knockbackX = -normalizedDx * KNOCKBACK_FORCE;\n                                    player.knockbackY = -normalizedDy * KNOCKBACK_FORCE;\n                                    // Check if enemy dies\n                                    if (enemy.health <= 0) {\n                                        var index = enemies.findIndex(function (e) { return e.id === enemy.id; });\n                                        if (index !== -1) {\n                                            // Award XP before removing the enemy\n                                            var xpGained = getXPFromEnemy(enemy);\n                                            addXPToPlayer(player, xpGained);\n                                            // Check for item drop and add directly to inventory\n                                            var dropChance = DROP_CHANCES[enemy.tier];\n                                            if (Math.random() < dropChance && player.inventory.length < MAX_INVENTORY_SIZE) {\n                                                // Create item and add directly to player's inventory\n                                                var newItem = {\n                                                    id: Math.random().toString(36).substr(2, 9),\n                                                    type: ['health_potion', 'speed_boost', 'shield'][Math.floor(Math.random() * 3)],\n                                                    x: enemy.x,\n                                                    y: enemy.y\n                                                };\n                                                player.inventory.push(newItem);\n                                                // Notify about item pickup\n                                                socket.emit('inventoryUpdate', player.inventory);\n                                                socket.emit('itemCollected', {\n                                                    playerId: player.id,\n                                                    itemId: newItem.id,\n                                                    itemType: newItem.type\n                                                });\n                                            }\n                                            // Remove the dead enemy and create a new one\n                                            enemies.splice(index, 1);\n                                            socket.emit('enemyDestroyed', enemy.id);\n                                            enemies.push(createEnemy());\n                                        }\n                                    }\n                                    // Check if player dies\n                                    if (player.health <= 0) {\n                                        respawnPlayer(player);\n                                        socket.emit('playerDied', player.id);\n                                        socket.emit('playerRespawned', player);\n                                        return { value: void 0 };\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        };\n                        // Check collision with enemies first\n                        for (var _i = 0, enemies_1 = enemies; _i < enemies_1.length; _i++) {\n                            var enemy = enemies_1[_i];\n                            var state_1 = _loop_1(enemy);\n                            console.log(state_1);\n                            if (typeof state_1 === \"object\")\n                                return state_1.value;\n                            if (state_1 === \"break\")\n                                break;\n                        }\n                        // Check collision with obstacles\n                        for (var _b = 0, obstacles_1 = obstacles; _b < obstacles_1.length; _b++) {\n                            var obstacle = obstacles_1[_b];\n                            console.log(obstacle);\n                            if (newX < obstacle.x + obstacle.width &&\n                                newX + PLAYER_SIZE > obstacle.x &&\n                                newY < obstacle.y + obstacle.height &&\n                                newY + PLAYER_SIZE > obstacle.y) {\n                                collision = true;\n                                if (obstacle.isEnemy && !player.isInvulnerable) {\n                                    player.health -= ENEMY_CORAL_DAMAGE;\n                                    socket.emit('playerDamaged', { playerId: player.id, health: player.health });\n                                    if (player.health <= 0) {\n                                        respawnPlayer(player);\n                                        socket.emit('playerDied', player.id);\n                                        socket.emit('playerRespawned', player);\n                                        return; // Exit early if player dies\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        // Update player position\n                        // Even if there was a collision, we want to apply the knockback\n                        player.x = Math.max(0, Math.min(WORLD_WIDTH - PLAYER_SIZE, newX));\n                        player.y = Math.max(0, Math.min(WORLD_HEIGHT - PLAYER_SIZE, newY));\n                        player.angle = data.angle;\n                        player.velocityX = data.velocityX;\n                        player.velocityY = data.velocityY;\n                        // Always emit the player's position\n                        socket.emit('playerMoved', player);\n                    }\n                    break;\n                case 'collectItem':\n                    var itemIndex = items.findIndex(function (item) { return item.id === data.itemId; });\n                    if (itemIndex !== -1 && players[socket.id].inventory.length < MAX_INVENTORY_SIZE) {\n                        var item = items[itemIndex];\n                        players[socket.id].inventory.push(item);\n                        items.splice(itemIndex, 1);\n                        items.push(createItem());\n                        socket.emit('itemCollected', { playerId: socket.id, itemId: data.itemId });\n                    }\n                    break;\n                case 'useItem':\n                    var playerUsingItem = players[socket.id];\n                    var inventoryIndex = playerUsingItem.inventory.findIndex(function (item) { return item.id === data.itemId; });\n                    if (inventoryIndex !== -1) {\n                        var item = playerUsingItem.inventory[inventoryIndex];\n                        playerUsingItem.inventory.splice(inventoryIndex, 1);\n                        switch (item.type) {\n                            case 'health_potion':\n                                playerUsingItem.health = Math.min(playerUsingItem.health + 50, PLAYER_MAX_HEALTH);\n                                break;\n                            case 'speed_boost':\n                                // Implement speed boost\n                                break;\n                            case 'shield':\n                                // Implement shield\n                                break;\n                        }\n                        socket.emit('itemUsed', { playerId: socket.id, itemId: data.itemId });\n                    }\n                    break;\n                case 'requestRespawn':\n                    var deadPlayer = players[socket.id];\n                    if (deadPlayer) {\n                        respawnPlayer(deadPlayer);\n                    }\n                    break;\n                // ... (handle other socket events)\n            }\n            break;\n        }\n    };\n\n                // Start enemy movement interval\n    setInterval(() => {\n        moveEnemies();\n                    socket.emit('enemiesUpdate', enemies);\n    }, 100);\n            "],{type:"application/javascript"});this.worker=new Worker(URL.createObjectURL(e));const t=this.loadPlayerProgress();console.log("Loaded saved progress:",t);const s={id:"player1",emit:(e,t)=>{console.log("Emitting event:",e,t),this.worker?.postMessage({type:"socketEvent",event:e,data:t})},on:(e,t)=>{console.log("Registering handler for event:",e),this.socketHandlers.set(e,t)},disconnect:()=>{this.worker?.terminate()}};this.socket=s,this.setupSocketListeners(),this.worker.onmessage=e=>{const{type:t,event:s,data:n}=e.data;if(console.log("Received message from worker:",t,s,n),"socketEvent"===t){const e=this.socketHandlers.get(s);e&&e(n)}},console.log("Sending init message to worker with saved progress"),this.worker.postMessage({type:"init",savedProgress:t})}catch(e){console.error("Error initializing worker:",e)}}initMultiPlayerMode(){this.socket=ke(prompt("Enter the server URL eg https://localhost:3000: \n Join a public server: https://54.151.123.177:3000/")||"",{secure:!0,rejectUnauthorized:!1,withCredentials:!0}),this.setupSocketListeners()}setupSocketListeners(){this.socket.on("connect",(()=>{console.log("Connected to server with ID:",this.socket.id)})),this.socket.on("currentPlayers",(e=>{console.log("Received current players:",e),this.players.clear(),Object.values(e).forEach((e=>{this.players.set(e.id,{...e,imageLoaded:!0,score:0,velocityX:0,velocityY:0,health:this.PLAYER_MAX_HEALTH})}))})),this.socket.on("newPlayer",(e=>{console.log("New player joined:",e),this.players.set(e.id,{...e,imageLoaded:!0,score:0,velocityX:0,velocityY:0,health:this.PLAYER_MAX_HEALTH})})),this.socket.on("playerMoved",(e=>{console.log("Player moved:",e);const t=this.players.get(e.id);t?Object.assign(t,e):this.players.set(e.id,{...e,imageLoaded:!0,score:0,velocityX:0,velocityY:0,health:this.PLAYER_MAX_HEALTH})})),this.socket.on("playerDisconnected",(e=>{console.log("Player disconnected:",e),this.players.delete(e)})),this.socket.on("dotCollected",(e=>{const t=this.players.get(e.playerId);t&&t.score++,this.dots.splice(e.dotIndex,1),this.generateDot()})),this.socket.on("enemiesUpdate",(e=>{this.enemies.clear(),e.forEach((e=>this.enemies.set(e.id,e)))})),this.socket.on("enemyMoved",(e=>{this.enemies.set(e.id,e)})),this.socket.on("playerDamaged",(e=>{const t=this.players.get(e.playerId);t&&(t.health=e.health)})),this.socket.on("enemyDamaged",(e=>{const t=this.enemies.get(e.enemyId);t&&(t.health=e.health)})),this.socket.on("enemyDestroyed",(e=>{this.enemies.delete(e)})),this.socket.on("obstaclesUpdate",(e=>{this.obstacles=e})),this.socket.on("obstacleDamaged",(e=>{const t=this.obstacles.find((t=>t.id===e.obstacleId));t&&t.isEnemy&&(t.health=e.health)})),this.socket.on("obstacleDestroyed",(e=>{const t=this.obstacles.findIndex((t=>t.id===e));-1!==t&&this.obstacles.splice(t,1)})),this.socket.on("itemsUpdate",(e=>{this.items=e})),this.socket.on("itemCollected",(e=>{this.items=this.items.filter((t=>t.id!==e.itemId))})),this.socket.on("inventoryUpdate",(e=>{const t=this.socket.id;if(t){const s=this.players.get(t);s&&(s.inventory=e)}})),this.socket.on("xpGained",(e=>{console.log("XP gained:",e);const t=this.players.get(e.playerId);t&&(t.xp=e.totalXp,t.level=e.level,t.xpToNextLevel=e.xpToNextLevel,t.maxHealth=e.maxHealth,t.damage=e.damage,this.showFloatingText(t.x,t.y-20,"+"+e.xp+" XP","#32CD32",16),this.savePlayerProgress(t))})),this.socket.on("levelUp",(e=>{console.log("Level up:",e);const t=this.players.get(e.playerId);t&&(t.level=e.level,t.maxHealth=e.maxHealth,t.damage=e.damage,this.showFloatingText(t.x,t.y-30,"Level Up! Level "+e.level,"#FFD700",24),this.savePlayerProgress(t))})),this.socket.on("playerLostLevel",(e=>{console.log("Player lost level:",e);const t=this.players.get(e.playerId);t&&(t.level=e.level,t.maxHealth=e.maxHealth,t.damage=e.damage,t.xp=e.xp,t.xpToNextLevel=e.xpToNextLevel,this.showFloatingText(t.x,t.y-30,"Level Lost! Level "+e.level,"#FF0000",24),this.savePlayerProgress(t))})),this.socket.on("playerRespawned",(e=>{const t=this.players.get(e.id);t&&(Object.assign(t,e),e.id===this.socket.id&&(this.isPlayerDead=!1,this.hideDeathScreen()),this.showFloatingText(e.x,e.y-50,"Respawned!","#FFFFFF",20))})),this.socket.on("playerDied",(e=>{e===this.socket.id&&(this.isPlayerDead=!0,this.showDeathScreen())})),this.socket.on("decorationsUpdate",(e=>{this.decorations=e})),this.socket.on("sandsUpdate",(e=>{this.sands=e}))}setupEventListeners(){document.addEventListener("keydown",(e=>{if("i"!==e.key&&"I"!==e.key){if("c"===e.key||"C"===e.key)return this.useMouseControls=!this.useMouseControls,void this.showFloatingText(this.canvas.width/2,50,"Controls: "+(this.useMouseControls?"Mouse":"Keyboard"),"#FFFFFF",20);if(this.isInventoryOpen){if(e.key>="1"&&e.key<="5"){const t=parseInt(e.key)-1;this.useItemFromInventory(t)}}else this.keysPressed.add(e.key),this.updatePlayerVelocity()}else this.toggleInventory()})),document.addEventListener("keyup",(e=>{this.keysPressed.delete(e.key),this.updatePlayerVelocity()}))}updatePlayerVelocity(){const e=this.isSinglePlayer?this.players.get("player1"):this.players.get(this.socket?.id||"");if(e){if(this.useMouseControls){const t=this.mouseX-e.x,s=this.mouseY-e.y,n=Math.sqrt(t*t+s*s);n>5?(e.velocityX+=t/n*this.PLAYER_ACCELERATION,e.velocityY+=s/n*this.PLAYER_ACCELERATION,e.angle=Math.atan2(s,t)):(e.velocityX*=this.FRICTION,e.velocityY*=this.FRICTION)}else{let t=0,s=0;if(this.keysPressed.has("ArrowUp")&&(s-=1),this.keysPressed.has("ArrowDown")&&(s+=1),this.keysPressed.has("ArrowLeft")&&(t-=1),this.keysPressed.has("ArrowRight")&&(t+=1),0!==t||0!==s){if(e.angle=Math.atan2(s,t),0!==t&&0!==s){const e=Math.sqrt(t*t+s*s);t/=e,s/=e}e.velocityX+=t*this.PLAYER_ACCELERATION,e.velocityY+=s*this.PLAYER_ACCELERATION}else e.velocityX*=this.FRICTION,e.velocityY*=this.FRICTION}const t=Math.sqrt(e.velocityX**2+e.velocityY**2);if(t>this.MAX_SPEED){const s=this.MAX_SPEED/t;e.velocityX*=s,e.velocityY*=s}const s=e.x+e.velocityX,n=e.y+e.velocityY;e.x=Math.max(0,Math.min(this.WORLD_WIDTH,s)),e.y=Math.max(0,Math.min(this.WORLD_HEIGHT,n)),this.isSinglePlayer?this.worker?.postMessage({type:"socketEvent",event:"playerMovement",data:{x:e.x,y:e.y,angle:e.angle,velocityX:e.velocityX,velocityY:e.velocityY}}):this.socket.emit("playerMovement",{x:e.x,y:e.y,angle:e.angle,velocityX:e.velocityX,velocityY:e.velocityY})}}updateCamera(e){this.cameraX=e.x-this.canvas.width/2,this.cameraY=e.y-this.canvas.height/2,this.cameraX=Math.max(0,Math.min(this.WORLD_WIDTH-this.canvas.width,this.cameraX)),this.cameraY=Math.max(0,Math.min(this.WORLD_HEIGHT-this.canvas.height,this.cameraY))}updatePlayerPosition(e){const t=e.x+e.velocityX,s=e.y+e.velocityY;let n=!1;for(const e of this.obstacles)if(t<e.x+e.width&&t+40>e.x&&s<e.y+e.height&&s+40>e.y){n=!0;break}n?(e.velocityX=0,e.velocityY=0):(e.x=t,e.y=s),0===e.velocityX&&0===e.velocityY||(e.angle=Math.atan2(e.velocityY,e.velocityX)),0===this.keysPressed.size&&(e.velocityX*=this.FRICTION,e.velocityY*=this.FRICTION),e.x=Math.max(0,Math.min(this.WORLD_WIDTH,e.x)),e.y=Math.max(0,Math.min(this.WORLD_HEIGHT,e.y)),this.socket.emit("playerMovement",{x:e.x,y:e.y,angle:e.angle,velocityX:e.velocityX,velocityY:e.velocityY}),this.checkDotCollision(e),this.checkEnemyCollision(e),this.updateCamera(e),this.checkItemCollision(e)}generateDots(){for(let e=0;e<this.DOT_COUNT;e++)this.generateDot()}generateDot(){const e={x:Math.random()*this.WORLD_WIDTH,y:Math.random()*this.WORLD_HEIGHT};this.dots.push(e)}checkDotCollision(e){for(let t=this.dots.length-1;t>=0;t--){const s=this.dots[t],n=e.x-s.x,i=e.y-s.y;Math.sqrt(n*n+i*i)<this.DOT_SIZE+20&&(this.socket.emit("collectDot",t),e.score++,this.dots.splice(t,1),this.generateDot())}}checkEnemyCollision(e){const t=Date.now();t-this.lastDamageTime<this.DAMAGE_COOLDOWN||this.enemies.forEach(((s,n)=>{const i=e.x-s.x,o=e.y-s.y;Math.sqrt(i*i+o*o)<40&&(this.lastDamageTime=t,this.socket.emit("collision",{enemyId:n}))}))}checkItemCollision(e){this.items.forEach((t=>{const s=e.x-t.x,n=e.y-t.y;Math.sqrt(s*s+n*n)<40&&this.socket.emit("collectItem",t.id)}))}toggleInventory(){this.isInventoryOpen=!this.isInventoryOpen}useItemFromInventory(e){const t=this.socket.id;if(t){const s=this.players.get(t);s&&s.inventory[e]&&this.socket.emit("useItem",s.inventory[e].id)}}renderInventoryMenu(){const e=this.socket.id;if(!e)return;const t=this.players.get(e);t&&(this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="rgba(200, 200, 200, 0.8)",this.ctx.fillRect(200,100,400,400),this.ctx.fillStyle="black",this.ctx.font="24px Arial",this.ctx.fillText("Inventory",350,140),t.inventory.forEach(((e,t)=>{const s=250+t%3*100,n=200+100*Math.floor(t/3);this.ctx.fillStyle="white",this.ctx.fillRect(s,n,80,80);const i=this.itemSprites[e.type];this.ctx.drawImage(i,s+10,n+10,60,60),this.ctx.fillStyle="black",this.ctx.font="16px Arial",this.ctx.fillText(`${t+1}`,s+5,n+20)})),this.ctx.fillStyle="black",this.ctx.font="16px Arial",this.ctx.fillText("Press 1-5 to use an item",300,480),this.ctx.fillText("Press I to close inventory",300,510))}handlePlayerMoved(e){const t=this.players.get(e.id);t&&(Object.assign(t,e),this.isSinglePlayer&&this.updateCamera(t))}handleEnemiesUpdate(e){this.enemies.clear(),e.forEach((e=>this.enemies.set(e.id,e)))}gameLoop(){if(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#00FFFF",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.isInventoryOpen)this.renderInventoryMenu();else{const e=this.socket?.id;if(e){const t=this.players.get(e);t&&this.updateCamera(t)}this.ctx.save(),this.ctx.translate(-this.cameraX,-this.cameraY),this.ctx.strokeStyle="black",this.ctx.strokeRect(0,0,this.WORLD_WIDTH,this.WORLD_HEIGHT);const t=[{name:"Common",end:2e3,color:"rgba(128, 128, 128, 0.1)"},{name:"Uncommon",end:4e3,color:"rgba(144, 238, 144, 0.1)"},{name:"Rare",end:6e3,color:"rgba(0, 0, 255, 0.1)"},{name:"Epic",end:8e3,color:"rgba(128, 0, 128, 0.1)"},{name:"Legendary",end:9e3,color:"rgba(255, 165, 0, 0.1)"},{name:"Mythic",end:this.WORLD_WIDTH,color:"rgba(255, 0, 0, 0.1)"}];let s=0;t.forEach((e=>{this.ctx.fillStyle=e.color,this.ctx.fillRect(s,0,e.end-s,this.WORLD_HEIGHT),this.ctx.fillStyle="black",this.ctx.font="20px Arial",this.ctx.fillText(e.name,s+10,30),s=e.end})),this.ctx.fillStyle="yellow",this.dots.forEach((e=>{this.ctx.beginPath(),this.ctx.arc(e.x,e.y,this.DOT_SIZE,0,2*Math.PI),this.ctx.fill()})),this.sands.forEach((e=>{this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.fillStyle="#FFE4B5",this.ctx.beginPath(),this.ctx.moveTo(.8*e.radius,0);for(let t=0;t<=2*Math.PI;t+=Math.PI/8){const s=t+e.rotation,n=.9*e.radius,i=Math.cos(s)*n,o=Math.sin(s)*n;this.ctx.lineTo(i,o)}this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()})),this.decorations.forEach((e=>{this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.scale(e.scale,e.scale),this.ctx.drawImage(this.palmSprite,-this.palmSprite.width/2,-this.palmSprite.height/2),this.ctx.restore()})),this.players.forEach(((e,t)=>{if(this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.rotate(e.angle),this.ctx.drawImage(this.playerSprite,-this.playerSprite.width/2,-this.playerSprite.height/2),this.ctx.restore(),this.ctx.fillStyle="black",this.ctx.font="16px Arial",this.ctx.fillText(`Score: ${e.score}`,e.x-30,e.y-30),this.ctx.fillStyle="red",this.ctx.fillRect(e.x-25,e.y-40,50,5),this.ctx.fillStyle="green",this.ctx.fillRect(e.x-25,e.y-40,e.health/e.maxHealth*50,5),e.level<this.MAX_LEVEL){const t=50,s=3,n=e.xp/e.xpToNextLevel;this.ctx.fillStyle="#4169E1",this.ctx.fillRect(e.x-25,e.y-45,t,s),this.ctx.fillStyle="#00FFFF",this.ctx.fillRect(e.x-25,e.y-45,t*n,s)}this.ctx.fillStyle="#FFD700",this.ctx.font="12px Arial",this.ctx.fillText("Lv."+e.level,e.x-25,e.y-50)})),this.enemies.forEach((e=>{const t=this.ENEMY_SIZE_MULTIPLIERS[e.tier],s=40*t;this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.rotate(e.angle),this.ctx.fillStyle=this.ENEMY_COLORS[e.tier],this.ctx.beginPath(),this.ctx.arc(0,0,s/2,0,2*Math.PI),this.ctx.fill(),"octopus"===e.type?this.ctx.drawImage(this.octopusSprite,-s/2,-s/2,s,s):this.ctx.drawImage(this.fishSprite,-s/2,-s/2,s,s),this.ctx.restore();const n=this.ENEMY_MAX_HEALTH[e.tier],i=50*t;this.ctx.fillStyle="red",this.ctx.fillRect(e.x-i/2,e.y-s/2-10,i,5),this.ctx.fillStyle="green",this.ctx.fillRect(e.x-i/2,e.y-s/2-10,i*(e.health/n),5),this.ctx.fillStyle="white",this.ctx.font=12*t+"px Arial",this.ctx.fillText(e.tier.toUpperCase(),e.x-i/2,e.y+s/2+15)})),this.obstacles.forEach((e=>{"coral"===e.type&&(this.ctx.save(),this.ctx.translate(e.x,e.y),e.isEnemy&&(this.ctx.fillStyle="rgba(255, 0, 0, 0.3)",this.ctx.fillRect(0,0,e.width,e.height)),this.ctx.drawImage(this.coralSprite,0,0,e.width,e.height),e.isEnemy&&void 0!==e.health&&(this.ctx.fillStyle="red",this.ctx.fillRect(0,-10,e.width,5),this.ctx.fillStyle="green",this.ctx.fillRect(0,-10,e.width*(e.health/this.ENEMY_CORAL_MAX_HEALTH),5)),this.ctx.restore())})),this.items.forEach((e=>{const t=this.itemSprites[e.type];this.ctx.drawImage(t,e.x-15,e.y-15,30,30)}));const n=this.socket.id;if(n){const e=this.players.get(n);e&&e.inventory.forEach(((e,t)=>{const s=this.itemSprites[e.type];this.ctx.drawImage(s,10+40*t,10,30,30)}))}this.ctx.restore(),this.drawMinimap()}this.floatingTexts=this.floatingTexts.filter((e=>(e.y-=1,e.alpha-=1/e.lifetime,!(e.alpha<=0||(this.ctx.globalAlpha=e.alpha,this.ctx.fillStyle=e.color,this.ctx.font=e.fontSize+"px Arial",this.ctx.fillText(e.text,e.x,e.y),this.ctx.globalAlpha=1,0))))),this.isPlayerDead||this.updatePlayerVelocity(),this.gameLoopId=requestAnimationFrame((()=>this.gameLoop()))}setupItemSprites(){["health_potion","speed_boost","shield"].forEach((e=>{const t=new Image;t.src=`./assets/${e}.png`,this.itemSprites[e]=t}))}resizeCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,console.log("Canvas resized to:",this.canvas.width,"x",this.canvas.height)}cleanup(){if(this.isSinglePlayer&&this.socket?.id){const e=this.players.get(this.socket.id);e&&this.savePlayerProgress(e)}this.gameLoopId&&cancelAnimationFrame(this.gameLoopId),this.worker&&(this.worker.terminate(),this.worker=null),this.socket&&this.socket.disconnect(),this.players.clear(),this.enemies.clear(),this.dots=[],this.obstacles=[],this.items=[],this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const e=document.getElementById("titleScreen"),t=document.getElementById("gameCanvas"),s=document.getElementById("exitButton");e&&t&&s&&(e.style.display="flex",t.style.display="none",s.style.display="none")}loadPlayerProgress(){const e=localStorage.getItem("playerProgress");return e?JSON.parse(e):{level:1,xp:0,maxHealth:this.PLAYER_MAX_HEALTH,damage:this.PLAYER_DAMAGE}}savePlayerProgress(e){const t={level:e.level,xp:e.xp,maxHealth:e.maxHealth,damage:e.damage};localStorage.setItem("playerProgress",JSON.stringify(t))}calculateXPRequirement(e){return Math.floor(this.BASE_XP_REQUIREMENT*Math.pow(this.XP_MULTIPLIER,e-1))}showFloatingText(e,t,s,n,i){this.floatingTexts.push({x:e,y:t,text:s,color:n,fontSize:i,alpha:1,lifetime:60})}showDeathScreen(){const e=document.getElementById("deathScreen");e&&(e.style.display="flex")}hideDeathScreen(){const e=document.getElementById("deathScreen");e&&(e.style.display="none")}drawMinimap(){const e=this.canvas.width-this.MINIMAP_WIDTH-this.MINIMAP_PADDING,t=this.MINIMAP_PADDING;this.ctx.fillStyle="rgba(0, 0, 0, 0.5)",this.ctx.fillRect(e,t,this.MINIMAP_WIDTH,this.MINIMAP_HEIGHT),[{color:"rgba(128, 128, 128, 0.5)"},{color:"rgba(144, 238, 144, 0.5)"},{color:"rgba(0, 0, 255, 0.5)"},{color:"rgba(128, 0, 128, 0.5)"},{color:"rgba(255, 165, 0, 0.5)"},{color:"rgba(255, 0, 0, 0.5)"}].forEach(((s,n)=>{const i=this.MINIMAP_WIDTH/6;this.ctx.fillStyle=s.color,this.ctx.fillRect(e+n*i,t,i,this.MINIMAP_HEIGHT)}));const s=this.socket?.id;if(s){const n=this.players.get(s);if(n){const s=e+n.x/this.WORLD_WIDTH*this.MINIMAP_WIDTH,i=t+n.y/this.WORLD_HEIGHT*this.MINIMAP_HEIGHT;this.ctx.fillStyle="yellow",this.ctx.beginPath(),this.ctx.arc(s,i,2,0,2*Math.PI),this.ctx.fill()}}}}})();