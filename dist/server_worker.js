(()=>{"use strict";const e={},t=[],a=[],s=[],n=1e4,o=2e3,i={common:{health:5,speed:.5,damage:5,probability:.4,color:"#808080"},uncommon:{health:40,speed:.75,damage:10,probability:.3,color:"#008000"},rare:{health:60,speed:1,damage:15,probability:.15,color:"#0000FF"},epic:{health:80,speed:1.25,damage:20,probability:.1,color:"#800080"},legendary:{health:100,speed:1.5,damage:25,probability:.04,color:"#FFA500"},mythic:{health:150,speed:2,damage:30,probability:.01,color:"#FF0000"}},r={common:{start:0,end:2e3},uncommon:{start:2e3,end:4e3},rare:{start:4e3,end:6e3},epic:{start:6e3,end:8e3},legendary:{start:8e3,end:9e3},mythic:{start:9e3,end:n}},h={common:1,uncommon:1.2,rare:1.4,epic:1.6,legendary:1.8,mythic:2},c={common:1,uncommon:1,rare:1,epic:1,legendary:1,mythic:1},d=[];function l(){const e=function(e){const t=n/6,a=e*t;if(e>=4){const a=n-t/2*(6-e);return{x:a+Math.random()*(n-a),y:Math.random()*o}}return{x:a+Math.random()*t,y:Math.random()*o}}(Math.floor(6*Math.random()));return{x:e.x,y:e.y,scale:.5+1.5*Math.random()}}function m(){const e=n;return{x:d.length*e+Math.random()*e,y:Math.random()*o,radius:50+70*Math.random(),rotation:Math.random()*Math.PI*2}}class p{constructor(){this.connections=new Map,this.dataChannels=new Map,this.onMessageCallback=null,this.enemies=[],this.items=[],this.obstacles=[],this.decorations=[],this.sands=[],this.players=new Map,this.ENEMY_COUNT=200,this.gameLoopInterval=null,this.connectionCode=Math.random().toString(36).substr(2,6).toUpperCase(),this.initializeGameState(),this.setupHostPeer(),this.startGameLoop()}initializeGameState(){for(let e=0;e<this.ENEMY_COUNT;e++)this.enemies.push(this.createEnemy());for(let e=0;e<20;e++)this.obstacles.push(this.createObstacle());for(let e=0;e<100;e++)this.decorations.push(l());for(let e=0;e<50;e++)this.sands.push(m())}createEnemy(){const e=Math.random()*n;let t="common";for(const[a,s]of Object.entries(r))if(e>=s.start&&e<s.end){t=a;break}const a=i[t];return{id:Math.random().toString(36).substr(2,9),type:Math.random()<.5?"octopus":"fish",tier:t,x:e,y:Math.random()*o,angle:Math.random()*Math.PI*2,health:a.health,speed:a.speed,damage:a.damage,knockbackX:0,knockbackY:0}}createObstacle(){const e=Math.random()<.3;return{id:Math.random().toString(36).substr(2,9),x:Math.random()*n,y:Math.random()*o,width:50+50*Math.random(),height:50+50*Math.random(),type:"coral",isEnemy:e,health:e?50:void 0}}startGameLoop(){this.gameLoopInterval=setInterval((()=>{this.moveEnemies(),this.broadcastGameState()}),100)}moveEnemies(){this.enemies.forEach((e=>{let t;e.knockbackX&&(e.knockbackX*=.9,e.x+=e.knockbackX,Math.abs(e.knockbackX)<.1&&(e.knockbackX=0)),e.knockbackY&&(e.knockbackY*=.9,e.y+=e.knockbackY,Math.abs(e.knockbackY)<.1&&(e.knockbackY=0));let a=1/0;if(this.players.forEach((s=>{const n=s.x-e.x,o=s.y-e.y,i=Math.sqrt(n*n+o*o);i<a&&(a=i,t=s)})),"octopus"===e.type)e.x+=(4*Math.random()-2)*e.speed,e.y+=(4*Math.random()-2)*e.speed;else if(t&&a<500){const a=t.x-e.x,s=t.y-e.y,n=Math.atan2(s,a);e.angle=n,e.x+=Math.cos(n)*e.speed,e.y+=Math.sin(n)*e.speed}const s=r[e.tier];e.x=Math.max(s.start,Math.min(s.end-1,e.x)),e.y=(e.y+o)%o}))}broadcastGameState(){const e={enemies:this.enemies,items:this.items,players:Array.from(this.players.values())};this.broadcast({type:"game-state",data:e})}setupHostPeer(){const e=new BroadcastChannel(`game-${this.connectionCode}`);e.onmessage=t=>{return a=this,s=void 0,o=function*(){const a=t.data;if("join-request"===a.type){const t=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]});this.setupPeerConnection(t,a.sender);const s=yield t.createOffer();yield t.setLocalDescription(s),e.postMessage({type:"offer",sender:"host",receiver:a.sender,data:s})}else if("answer"===a.type&&"host"===a.receiver){const e=this.connections.get(a.sender);e&&(yield e.setRemoteDescription(new RTCSessionDescription(a.data)))}else if("ice-candidate"===a.type&&"host"===a.receiver){const e=this.connections.get(a.sender);e&&(yield e.addIceCandidate(new RTCIceCandidate(a.data)))}},new((n=void 0)||(n=Promise))((function(e,t){function i(e){try{h(o.next(e))}catch(e){t(e)}}function r(e){try{h(o.throw(e))}catch(e){t(e)}}function h(t){var a;t.done?e(t.value):(a=t.value,a instanceof n?a:new n((function(e){e(a)}))).then(i,r)}h((o=o.apply(a,s||[])).next())}));var a,s,n,o},self.postMessage({type:"connection-code",data:{code:this.connectionCode}})}setupPeerConnection(e,t){this.connections.set(t,e);const a=e.createDataChannel("gameData");this.setupDataChannel(a,t),e.onicecandidate=e=>{e.candidate&&new BroadcastChannel(`game-${this.connectionCode}`).postMessage({type:"ice-candidate",sender:"host",receiver:t,data:e.candidate})},e.ondatachannel=e=>{this.setupDataChannel(e.channel,t)}}setupDataChannel(e,t){this.dataChannels.set(t,e),e.onmessage=e=>{this.onMessageCallback&&this.onMessageCallback(JSON.parse(e.data))},e.onopen=()=>{console.log(`Data channel opened with peer ${t}`),self.postMessage({type:"peer-connected",data:{peerId:t}})},e.onclose=()=>{console.log(`Data channel closed with peer ${t}`),this.connections.delete(t),this.dataChannels.delete(t),self.postMessage({type:"peer-disconnected",data:{peerId:t}})}}isConnected(e){const t=this.dataChannels.get(e);return"open"===(null==t?void 0:t.readyState)}sendToPeer(e,t){const a=this.dataChannels.get(e);return"open"===(null==a?void 0:a.readyState)&&(a.send(JSON.stringify(t)),!0)}broadcast(e){const t=JSON.stringify(e);this.dataChannels.forEach((e=>{"open"===e.readyState&&e.send(t)}))}onMessage(e){this.onMessageCallback=e}getConnectionCode(){return this.connectionCode}handleMessage(e){switch(e.type){case"player-movement":this.handlePlayerMovement(e.sender,e.data);break;case"collect-item":this.handleItemCollection(e.sender,e.data);break;case"use-item":this.handleItemUse(e.sender,e.data);break;case"craft-items":this.handleCrafting(e.sender,e.data)}}handlePlayerMovement(e,t){const a=this.players.get(e);a&&(a.x=t.x,a.y=t.y,a.angle=t.angle,this.checkCollisions(a))}handleItemCollection(e,t){const a=this.players.get(e);if(!a)return;const s=this.items.findIndex((e=>e.id===t));if(-1===s)return;const n=this.items[s];a.inventory.push(n),this.items.splice(s,1),this.broadcast({type:"item-collected",data:{playerId:e,itemId:t,inventory:a.inventory}})}handleItemUse(e,t){const a=this.players.get(e);if(!a)return;const s=a.loadout.findIndex((e=>(null==e?void 0:e.id)===t));if(-1===s)return;const n=a.loadout[s];n&&this.applyItemEffect(a,n)}handleCrafting(e,t){const a=this.players.get(e);if(!a)return;if(!this.validateCrafting(a,t.items))return;const s=this.createUpgradedItem(t.items[0]);a.inventory=a.inventory.filter((e=>!t.items.some((t=>t.id===e.id)))),a.inventory.push(s),this.broadcast({type:"crafting-success",data:{playerId:e,newItem:s,inventory:a.inventory}})}cleanup(){this.gameLoopInterval&&clearInterval(this.gameLoopInterval),this.connections.forEach((e=>e.close())),this.connections.clear(),this.dataChannels.clear(),new BroadcastChannel(`game-${this.connectionCode}`).close()}checkCollisions(e){this.enemies.forEach((t=>{const a=40*h[t.tier];if(e.x<t.x+a&&e.x+40>t.x&&e.y<t.y+a&&e.y+40>t.y&&!e.isInvulnerable){e.health-=t.damage;const a=t.x-e.x,s=t.y-e.y,n=Math.sqrt(a*a+s*s),o=a/n,i=s/n;if(e.knockbackX=20*-o,e.knockbackY=20*-i,t.health-=e.damage,t.health<=0){const a=this.enemies.findIndex((e=>e.id===t.id));if(-1!==a){const s=this.getXPFromEnemy(t);this.addXPToPlayer(e,s),Math.random()<c[t.tier]&&this.dropItem(t),this.enemies.splice(a,1),this.enemies.push(this.createEnemy())}}e.health<=0&&this.handlePlayerDeath(e),this.broadcast({type:"combat-update",data:{player:{id:e.id,health:e.health,knockbackX:e.knockbackX,knockbackY:e.knockbackY},enemy:{id:t.id,health:t.health}}})}}))}applyItemEffect(e,t){const a=t.rarity?{common:1,uncommon:1.5,rare:2,epic:2.5,legendary:3,mythic:4}[t.rarity]:1;switch(t.type){case"health_potion":e.health=Math.min(e.maxHealth,e.health+50*a);break;case"speed_boost":e.speed_boost=!0,setTimeout((()=>{this.players.has(e.id)&&(e.speed_boost=!1,this.broadcast({type:"effect-ended",data:{playerId:e.id,effect:"speed_boost"}}))}),5e3*a);break;case"shield":e.isInvulnerable=!0,setTimeout((()=>{this.players.has(e.id)&&(e.isInvulnerable=!1,this.broadcast({type:"effect-ended",data:{playerId:e.id,effect:"shield"}}))}),3e3*a)}this.broadcast({type:"effect-applied",data:{playerId:e.id,effect:t.type,multiplier:a}})}validateCrafting(e,t){if(!t.every((t=>e.inventory.some((e=>e.id===t.id)))))return!1;const a=t[0];return t.every((e=>e.type===a.type&&e.rarity===a.rarity))}createUpgradedItem(e){return{id:Math.random().toString(36).substr(2,9),type:e.type,x:0,y:0,rarity:{common:"uncommon",uncommon:"rare",rare:"epic",epic:"legendary",legendary:"mythic"}[e.rarity||"common"]}}getXPFromEnemy(e){return{common:10,uncommon:20,rare:40,epic:80,legendary:160,mythic:320}[e.tier]}addXPToPlayer(e,t){for(e.xp+=t;e.xp>=e.xpToNextLevel;)e.xp-=e.xpToNextLevel,e.level++,e.maxHealth+=10,e.damage+=2,e.xpToNextLevel=Math.floor(100*Math.pow(1.5,e.level-1)),this.broadcast({type:"level-up",data:{playerId:e.id,level:e.level,maxHealth:e.maxHealth,damage:e.damage}});this.broadcast({type:"xp-gained",data:{playerId:e.id,xp:t,totalXp:e.xp,xpToNextLevel:e.xpToNextLevel}})}handlePlayerDeath(e){e.isInvulnerable=!0,e.health=e.maxHealth,e.x=200,e.y=1e3,this.broadcast({type:"player-died",data:{playerId:e.id}}),setTimeout((()=>{this.players.has(e.id)&&(e.isInvulnerable=!1,this.broadcast({type:"player-respawned",data:e}))}),3e3)}dropItem(e){const t=["health_potion","speed_boost","shield"],a=t[Math.floor(Math.random()*t.length)],s={id:Math.random().toString(36).substr(2,9),type:a,x:e.x,y:e.y,rarity:e.tier};this.items.push(s),this.broadcast({type:"item-dropped",data:s})}}const y=new class{constructor(){this.connections=new Map,this.isRunning=!1,this.decorations=[],this.sands=[],this.ENEMY_COUNT=200,this.signalingServer=null,this.initializeGameState()}calculateXPRequirement(e){return Math.floor(100*Math.pow(1.5,e-1))}initializeGameState(){for(let e=0;e<this.ENEMY_COUNT;e++)t.push(this.createEnemy());for(let e=0;e<20;e++)a.push(this.createObstacle());for(let e=0;e<100;e++)this.decorations.push(l());for(let e=0;e<50;e++)this.sands.push(m())}start(){if(!this.isRunning)try{this.signalingServer=new p,this.signalingServer.onMessage((e=>{this.handleMessage(e)})),this.isRunning=!0,this.startGameLoops(),this.postMessage("status",{online:!0}),this.postMessage("log","Server started successfully")}catch(e){const t=e instanceof Error?e.message:"Unknown error";this.postMessage("log",`Failed to start server: ${t}`)}}handleMessage(e){try{switch(e.type){case"authenticate":this.handleAuthentication(e.data);break;case"playerMovement":this.handlePlayerMovement(e.data)}}catch(e){console.error("Error handling message:",e)}}handleAuthentication(n){var o,i;const r={id:Math.random().toString(36).substr(2,9),peerId:n.userId,userId:n.userId,username:n.username};(null===(o=this.signalingServer)||void 0===o?void 0:o.isConnected(r.peerId))?(this.connections.set(r.id,r),e[r.id]={id:r.id,name:n.playerName||"Anonymous",x:200,y:1e3,angle:0,score:0,velocityX:0,velocityY:0,health:100,maxHealth:100,damage:5,inventory:[],loadout:Array(10).fill(null),isInvulnerable:!0,level:1,xp:0,xpToNextLevel:this.calculateXPRequirement(1)},null===(i=this.signalingServer)||void 0===i||i.sendToPeer(r.peerId,{type:"authenticated",data:{playerId:r.id,gameState:{players:e,enemies:t,items:s,obstacles:a,decorations:this.decorations,sands:this.sands}}}),this.broadcast({type:"playerJoined",data:e[r.id]})):this.postMessage("log",`Failed to authenticate user ${r.username}: No peer connection`)}broadcast(e){this.signalingServer&&this.signalingServer.broadcast(e)}stop(){this.isRunning&&(this.connections.clear(),this.isRunning=!1,this.signalingServer=null,this.postMessage("status",{online:!1}),this.postMessage("log","Server stopped"))}startGameLoops(){setInterval((()=>{this.moveEnemies(),this.updateStats(),this.broadcast({type:"gameState",data:{players:e,enemies:t,items:s}})}),100),setInterval((()=>{Object.values(e).forEach((e=>{e.health<e.maxHealth&&(e.health=Math.min(e.maxHealth,e.health+5))}))}),1e3)}createEnemy(){const e=Math.random()*n;let t="common";for(const[a,s]of Object.entries(r))if(e>=s.start&&e<s.end){t=a;break}const a=i[t];return{id:Math.random().toString(36).substr(2,9),type:Math.random()<.5?"octopus":"fish",tier:t,x:e,y:Math.random()*o,angle:Math.random()*Math.PI*2,health:a.health,speed:a.speed,damage:a.damage,knockbackX:0,knockbackY:0}}createObstacle(){const e=Math.random()<.3;return{id:Math.random().toString(36).substr(2,9),x:Math.random()*n,y:Math.random()*o,width:50+50*Math.random(),height:50+50*Math.random(),type:"coral",isEnemy:e,health:e?50:void 0}}moveEnemies(){}updateStats(){this.postMessage("stats",{players:Object.keys(e).length,enemies:t.length})}postMessage(e,t){self.postMessage({type:e,data:t})}handlePlayerMovement(a){const s=e[a.id];if(s){s.x=Math.max(0,Math.min(9960,a.x)),s.y=Math.max(0,Math.min(1960,a.y)),s.angle=a.angle,s.velocityX=a.velocityX,s.velocityY=a.velocityY;for(const a of t){const t=40*h[a.tier];if(s.x<a.x+t&&s.x+40>a.x&&s.y<a.y+t&&s.y+40>a.y&&!s.isInvulnerable){s.health-=a.damage;const t=a.x-s.x,n=a.y-s.y,o=Math.sqrt(t*t+n*n),i=t/o,r=n/o;s.x-=20*i,s.y-=20*r,s.health<=0&&(this.broadcast({type:"playerDied",data:{playerId:s.id}}),s.health=s.maxHealth,s.x=200,s.y=1e3,s.isInvulnerable=!0,setTimeout((()=>{e[s.id]&&(e[s.id].isInvulnerable=!1)}),3e3))}}this.broadcast({type:"playerMoved",data:s})}}};self.onmessage=function(e){const{type:t,data:a}=e.data;switch(t){case"start":y.start();break;case"stop":y.stop();break;default:console.warn("Unknown message type:",t)}}})();